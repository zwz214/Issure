#ifndef __QAC_INCLUDE_typeindex__
#define __QAC_INCLUDE_typeindex__

// Some flags to control how closely the standard is followed
#include <qac_config.h>


__QAC_BEGIN_NAMESPACE

class type_info;

class type_index {
public:
  type_index(const type_info& rhs) noexcept;
  bool operator==(const type_index& rhs) const noexcept;
  bool operator!=(const type_index& rhs) const noexcept;
  bool operator< (const type_index& rhs) const noexcept;
  bool operator<= (const type_index& rhs) const noexcept;
  bool operator> (const type_index& rhs) const noexcept;
  bool operator>= (const type_index& rhs) const noexcept;
  size_t hash_code() const;
  const char* name() const;
private:
  // Note that the use of a pointer here, rather than a reference,
  // means that the default copy/move constructor and assignment
  // operators will be provided and work as expected.
};

__QAC_END_NAMESPACE


#endif
